name: Build And Push

on:
  push:
    # Always run on main so that the cached dependencies are up to date
    # PRs can access caches created by the default branch, but if we do
    # not create the cache on the default branch, PRs would allways create
    # a new one, which defeats the purpose.
    branches:
      - main
    tags:
      - '*'
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Cache dependencies
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: install node modules
        run: npm ci

      - uses: pre-commit/action@v3.0.0

  build-and-push-image:
    needs:
      - pre-commit

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          push: ${{ github.repository_owner == 'morremeyer' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_VERSION=${{ github.ref_name }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
